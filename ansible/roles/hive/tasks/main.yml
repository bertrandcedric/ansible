---
- get_url:
    url: "{{hive_url}}"
    mode: 0644
    force: no
    validate_certs: no
    dest: "{{workspace}}/hive-{{hive_version}}.tar.gz"
  delegate_to: localhost
  run_once: true

- stat:
    path: "/opt/hive"
  register: st
  become: yes

- unarchive:
    src: "{{workspace}}/hive-{{hive_version}}.tar.gz"
    dest: "/opt"
    owner: deploy
    group: deploy
  when: not st.stat.exists
  become: yes

- file:
    src: "/opt/apache-hive-{{hive_version}}-bin"
    dest: "/opt/hive"
    owner: deploy
    group: deploy
    state: link
  become: yes

- blockinfile:
    dest: /home/deploy/.bashrc
    marker: "#{mark} ANSIBLE HIVE MANAGED BLOCK"
    block: |
      #HIVE VARIABLES START
      export HIVE_HOME=/opt/hive
      export PATH=$HIVE_HOME/bin:$PATH
      #HIVE VARIABLES END

- template:
    src: "{{item}}"
    dest: "/opt/hive/conf/{{item}}"
    owner: deploy
    group: deploy
  with_items:
    - hive-site.xml
    - tez-site.xml
  become: yes

- copy:
    src: "tez/"
    dest: "/opt/hive/lib"
    owner: deploy
    group: deploy
  become: yes

- copy:
    src: "tez.tar.gz"
    dest: "/tmp"
    owner: deploy
    group: deploy
  become: yes

#
# hadoop dfs -mkdir /apps/tez
# hadoop dfs -copyFromLocal /tmp/tez.tar.gz /apps/tez/
#
# init metastore => schematool -dbType derby -initSchema
# lancement de hive server => hive
#
# CREATE TABLE IF NOT EXISTS employee ( eid int, name String, salary String, destination String) COMMENT 'Employee details' ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n' STORED AS TEXTFILE;
#
#1201,Gopal,45000,Technical manager
#1202,Manisha,45000,Proof reader
#1203,Masthanvali,40000,Technical writer
#1204,Kiran,40000,Hr Admin
#1205,Kranthi,30000,Op Admin
#
# LOAD DATA LOCAL INPATH '/home/deploy/sample.txt' OVERWRITE INTO TABLE employee;
#
# hive -e 'select * from employee where salary > 40000;'
#
