---
- name: creation de l'utilisateur jenkins
  user: name=jenkins
  become: yes

- name: ajout la clef dans authorized_key de deploy
  authorized_key: user=deploy key="{{ lookup('file', 'id_rsa_1.pub') }}"
  become: yes

- name: Check file
  stat: path="/tmp/{{item}}"
  with_items:
    - jenkins-{{jenkins_version}}-1.1.noarch.rpm
    - credentials.hpi
    - ssh-credentials.hpi
    - ssh-agent.hpi
    - build-with-parameters.hpi
  register: st
  become: yes

- name: Copie file
  copy: src="{{item.1}}" dest="/tmp/{{item.1}}" mode=777
  when: not st.results.{{item.0}}.stat.exists
  with_indexed_items:
    - jenkins-{{jenkins_version}}-1.1.noarch.rpm
    - credentials.hpi
    - ssh-credentials.hpi
    - ssh-agent.hpi
    - build-with-parameters.hpi

- name: install jenkins rpm from a local file
  shell: sudo rpm -i --replacepkgs /tmp/jenkins-{{jenkins_version}}-1.1.noarch.rpm
  become: yes

- name: start jenkins
  shell: /etc/init.d/jenkins start
  become: yes

- wait_for: port=8080 delay=10 timeout=30
- pause: seconds=10

- name: download jenkins-cli.jar
  get_url: url=http://{{ansible_hostname}}:8080/jnlpJars/jenkins-cli.jar dest=/tmp/jenkins-cli.jar mode=u+x

- name: install plugin Jenkins
  shell: java -jar /tmp/jenkins-cli.jar -s http://{{ansible_hostname}}:8080 install-plugin /tmp/{{item}}
  with_items:
    - credentials.hpi
    - ssh-credentials.hpi
    - ssh-agent.hpi
    - build-with-parameters.hpi

- name: restart Jenkins
  shell: java -jar /tmp/jenkins-cli.jar -s http://{{ansible_hostname}}:8080 restart

- wait_for: port=8080 delay=10 timeout=30
- pause: seconds=10

- name: templatisation fichier config.xml.j2 pour injection de variable
  template: src="config.xml.j2" dest="/tmp/config.xml"

- name: get list jobs Jenkins
  shell: java -jar /tmp/jenkins-cli.jar -s http://{{ansible_hostname}}:8080 list-jobs
  register: lists
- debug: var=lists.stdout_lines

- name: creation job Jenkins
  shell: java -jar /tmp/jenkins-cli.jar -s http://{{ansible_hostname}}:8080 create-job TEST < /tmp/config.xml
  when: '"TEST" not in lists.stdout_lines'

- name: update job Jenkins
  shell: java -jar /tmp/jenkins-cli.jar -s http://{{ansible_hostname}}:8080 update-job TEST < /tmp/config.xml
  when: '"TEST" in lists.stdout_lines'
